# Generated by Django 3.1.3 on 2021-06-22 22:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemChangeRecord',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(null=False)),
                ('operation', models.CharField(choices=[('DELETE', 'Delete'), ('INSERT', 'Insert'), ('UPDATE', 'Update')], max_length=100)),
                ('item_id', models.UUIDField()),
                ('provider_timestamp', models.DateTimeField()),
                ('provider_id', models.CharField(max_length=200)),
                ('insert_provider_timestamp', models.DateTimeField()),
                ('insert_provider_id', models.CharField(max_length=200)),
                ('serialized_item', models.TextField(null=False)),
                ('should_ignore', models.BooleanField()),
                ('is_applied', models.BooleanField()),
                ('vector_clock', models.JSONField(default=list)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='SyncLockRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SyncSessionRecord',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('started_at', models.DateTimeField()),
                ('ended_at', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('IN_PROGRESS', 'In progress'), ('FINISHED', 'Finished'), ('FAILED', 'Failed')], max_length=100)),
                ('source_provider_id', models.TextField()),
                ('target_provider_id', models.TextField()),
                ('item_changes', models.ManyToManyField(to='maestro.ItemChangeRecord')),
            ],
        ),
        migrations.CreateModel(
            name='ItemVersionRecord',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(null=False)),
                ('vector_clock', models.JSONField(default=list)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('current_item_change', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='maestro.itemchangerecord')),
            ],
        ),
        migrations.CreateModel(
            name='ConflictLogRecord',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(null=False)),
                ('resolved_at', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('DEFERRED', 'Deferred'), ('RESOLVED', 'Resolved')], max_length=100)),
                ('conflict_type', models.CharField(choices=[('LOCAL_UPDATE_REMOTE_UPDATE', 'Both the local provider and the remote provider updated the same item'), ('LOCAL_UPDATE_REMOTE_DELETE', 'The local provider updated an item that was deleted by the remote provider'), ('LOCAL_DELETE_REMOTE_UPDATE', 'The local provider deleted an item that was updated by the remote provider'), ('EXCEPTION_OCCURRED', 'There was an error applying a change to an item')], max_length=100)),
                ('description', models.TextField(null=True)),
                ('item_change_loser', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lost_conflicts', to='maestro.itemchangerecord')),
                ('item_change_winner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='won_conflicts', to='maestro.itemchangerecord')),
            ],
        ),
    ]
